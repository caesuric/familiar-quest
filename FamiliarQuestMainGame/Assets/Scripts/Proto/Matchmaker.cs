// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: matchmaker.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from matchmaker.proto</summary>
public static partial class MatchmakerReflection {

  #region Descriptor
  /// <summary>File descriptor for matchmaker.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MatchmakerReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChBtYXRjaG1ha2VyLnByb3RvIjcKE0dhbWVDcmVhdGlvblJlcXVlc3QSDQoF",
          "dG9rZW4YASABKAkSEQoJZ2FtZV9uYW1lGAIgASgJIl0KEkdhbWVDcmVhdGlv",
          "blJlc3VsdBIbChNjcmVhdGlvbl9zdWNjZXNzZnVsGAEgASgIEioKEGdhbWVf",
          "ZGVzY3JpcHRpb24YAiABKAsyEC5HYW1lRGVzY3JpcHRpb24iFwoVR2V0QWN0",
          "aXZlR2FtZXNSZXF1ZXN0IjUKD0dhbWVEZXNjcmlwdGlvbhIRCglnYW1lX25h",
          "bWUYASABKAkSDwoHZ2FtZV9pZBgCIAEoCSIrCghHYW1lTGlzdBIfCgVnYW1l",
          "cxgBIAMoCzIQLkdhbWVEZXNjcmlwdGlvbiI8ChVHYW1lQ29ubmVjdGlvblJl",
          "cXVlc3QSDwoHZ2FtZV9pZBgBIAEoCRISCgp1c2VyX3Rva2VuGAIgASgJIjUK",
          "FEdhbWVDb25uZWN0aW9uUmVzdWx0Eh0KFWNvbm5lY3Rpb25fc3VjY2Vzc2Z1",
          "bBgBIAEoCCIuChhHYW1lRGlzY29ubmVjdGlvblJlcXVlc3QSEgoKdXNlcl90",
          "b2tlbhgBIAEoCSIZChdHYW1lRGlzY29ubmVjdGlvblJlc3VsdDKNAgoKTWF0",
          "Y2hNYWtlchI5CgpDcmVhdGVHYW1lEhQuR2FtZUNyZWF0aW9uUmVxdWVzdBoT",
          "LkdhbWVDcmVhdGlvblJlc3VsdCIAEjUKDkdldEFjdGl2ZUdhbWVzEhYuR2V0",
          "QWN0aXZlR2FtZXNSZXF1ZXN0GgkuR2FtZUxpc3QiABJACg1Db25uZWN0VG9H",
          "YW1lEhYuR2FtZUNvbm5lY3Rpb25SZXF1ZXN0GhUuR2FtZUNvbm5lY3Rpb25S",
          "ZXN1bHQiABJLChJEaXNjb25uZWN0RnJvbUdhbWUSGS5HYW1lRGlzY29ubmVj",
          "dGlvblJlcXVlc3QaGC5HYW1lRGlzY29ubmVjdGlvblJlc3VsdCIAYgZwcm90",
          "bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GameCreationRequest), global::GameCreationRequest.Parser, new[]{ "Token", "GameName" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameCreationResult), global::GameCreationResult.Parser, new[]{ "CreationSuccessful", "GameDescription" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetActiveGamesRequest), global::GetActiveGamesRequest.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameDescription), global::GameDescription.Parser, new[]{ "GameName", "GameId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameList), global::GameList.Parser, new[]{ "Games" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameConnectionRequest), global::GameConnectionRequest.Parser, new[]{ "GameId", "UserToken" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameConnectionResult), global::GameConnectionResult.Parser, new[]{ "ConnectionSuccessful" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameDisconnectionRequest), global::GameDisconnectionRequest.Parser, new[]{ "UserToken" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameDisconnectionResult), global::GameDisconnectionResult.Parser, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GameCreationRequest : pb::IMessage<GameCreationRequest> {
  private static readonly pb::MessageParser<GameCreationRequest> _parser = new pb::MessageParser<GameCreationRequest>(() => new GameCreationRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameCreationRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchmakerReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameCreationRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameCreationRequest(GameCreationRequest other) : this() {
    token_ = other.token_;
    gameName_ = other.gameName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameCreationRequest Clone() {
    return new GameCreationRequest(this);
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 1;
  private string token_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "game_name" field.</summary>
  public const int GameNameFieldNumber = 2;
  private string gameName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameName {
    get { return gameName_; }
    set {
      gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameCreationRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameCreationRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Token != other.Token) return false;
    if (GameName != other.GameName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    if (GameName.Length != 0) hash ^= GameName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Token.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Token);
    }
    if (GameName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(GameName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    if (GameName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameCreationRequest other) {
    if (other == null) {
      return;
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
    if (other.GameName.Length != 0) {
      GameName = other.GameName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Token = input.ReadString();
          break;
        }
        case 18: {
          GameName = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GameCreationResult : pb::IMessage<GameCreationResult> {
  private static readonly pb::MessageParser<GameCreationResult> _parser = new pb::MessageParser<GameCreationResult>(() => new GameCreationResult());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameCreationResult> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchmakerReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameCreationResult() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameCreationResult(GameCreationResult other) : this() {
    creationSuccessful_ = other.creationSuccessful_;
    gameDescription_ = other.gameDescription_ != null ? other.gameDescription_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameCreationResult Clone() {
    return new GameCreationResult(this);
  }

  /// <summary>Field number for the "creation_successful" field.</summary>
  public const int CreationSuccessfulFieldNumber = 1;
  private bool creationSuccessful_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CreationSuccessful {
    get { return creationSuccessful_; }
    set {
      creationSuccessful_ = value;
    }
  }

  /// <summary>Field number for the "game_description" field.</summary>
  public const int GameDescriptionFieldNumber = 2;
  private global::GameDescription gameDescription_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameDescription GameDescription {
    get { return gameDescription_; }
    set {
      gameDescription_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameCreationResult);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameCreationResult other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CreationSuccessful != other.CreationSuccessful) return false;
    if (!object.Equals(GameDescription, other.GameDescription)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CreationSuccessful != false) hash ^= CreationSuccessful.GetHashCode();
    if (gameDescription_ != null) hash ^= GameDescription.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (CreationSuccessful != false) {
      output.WriteRawTag(8);
      output.WriteBool(CreationSuccessful);
    }
    if (gameDescription_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(GameDescription);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CreationSuccessful != false) {
      size += 1 + 1;
    }
    if (gameDescription_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameDescription);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameCreationResult other) {
    if (other == null) {
      return;
    }
    if (other.CreationSuccessful != false) {
      CreationSuccessful = other.CreationSuccessful;
    }
    if (other.gameDescription_ != null) {
      if (gameDescription_ == null) {
        GameDescription = new global::GameDescription();
      }
      GameDescription.MergeFrom(other.GameDescription);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CreationSuccessful = input.ReadBool();
          break;
        }
        case 18: {
          if (gameDescription_ == null) {
            GameDescription = new global::GameDescription();
          }
          input.ReadMessage(GameDescription);
          break;
        }
      }
    }
  }

}

public sealed partial class GetActiveGamesRequest : pb::IMessage<GetActiveGamesRequest> {
  private static readonly pb::MessageParser<GetActiveGamesRequest> _parser = new pb::MessageParser<GetActiveGamesRequest>(() => new GetActiveGamesRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetActiveGamesRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchmakerReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetActiveGamesRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetActiveGamesRequest(GetActiveGamesRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetActiveGamesRequest Clone() {
    return new GetActiveGamesRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetActiveGamesRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetActiveGamesRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetActiveGamesRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class GameDescription : pb::IMessage<GameDescription> {
  private static readonly pb::MessageParser<GameDescription> _parser = new pb::MessageParser<GameDescription>(() => new GameDescription());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameDescription> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchmakerReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameDescription() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameDescription(GameDescription other) : this() {
    gameName_ = other.gameName_;
    gameId_ = other.gameId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameDescription Clone() {
    return new GameDescription(this);
  }

  /// <summary>Field number for the "game_name" field.</summary>
  public const int GameNameFieldNumber = 1;
  private string gameName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameName {
    get { return gameName_; }
    set {
      gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "game_id" field.</summary>
  public const int GameIdFieldNumber = 2;
  private string gameId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameId {
    get { return gameId_; }
    set {
      gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameDescription);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameDescription other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GameName != other.GameName) return false;
    if (GameId != other.GameId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GameName.Length != 0) hash ^= GameName.GetHashCode();
    if (GameId.Length != 0) hash ^= GameId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GameName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GameName);
    }
    if (GameId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(GameId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GameName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
    }
    if (GameId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameDescription other) {
    if (other == null) {
      return;
    }
    if (other.GameName.Length != 0) {
      GameName = other.GameName;
    }
    if (other.GameId.Length != 0) {
      GameId = other.GameId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GameName = input.ReadString();
          break;
        }
        case 18: {
          GameId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GameList : pb::IMessage<GameList> {
  private static readonly pb::MessageParser<GameList> _parser = new pb::MessageParser<GameList>(() => new GameList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchmakerReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameList(GameList other) : this() {
    games_ = other.games_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameList Clone() {
    return new GameList(this);
  }

  /// <summary>Field number for the "games" field.</summary>
  public const int GamesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::GameDescription> _repeated_games_codec
      = pb::FieldCodec.ForMessage(10, global::GameDescription.Parser);
  private readonly pbc::RepeatedField<global::GameDescription> games_ = new pbc::RepeatedField<global::GameDescription>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::GameDescription> Games {
    get { return games_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!games_.Equals(other.games_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= games_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    games_.WriteTo(output, _repeated_games_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += games_.CalculateSize(_repeated_games_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameList other) {
    if (other == null) {
      return;
    }
    games_.Add(other.games_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          games_.AddEntriesFrom(input, _repeated_games_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class GameConnectionRequest : pb::IMessage<GameConnectionRequest> {
  private static readonly pb::MessageParser<GameConnectionRequest> _parser = new pb::MessageParser<GameConnectionRequest>(() => new GameConnectionRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameConnectionRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchmakerReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameConnectionRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameConnectionRequest(GameConnectionRequest other) : this() {
    gameId_ = other.gameId_;
    userToken_ = other.userToken_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameConnectionRequest Clone() {
    return new GameConnectionRequest(this);
  }

  /// <summary>Field number for the "game_id" field.</summary>
  public const int GameIdFieldNumber = 1;
  private string gameId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameId {
    get { return gameId_; }
    set {
      gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_token" field.</summary>
  public const int UserTokenFieldNumber = 2;
  private string userToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserToken {
    get { return userToken_; }
    set {
      userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameConnectionRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameConnectionRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GameId != other.GameId) return false;
    if (UserToken != other.UserToken) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GameId.Length != 0) hash ^= GameId.GetHashCode();
    if (UserToken.Length != 0) hash ^= UserToken.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GameId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GameId);
    }
    if (UserToken.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GameId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
    }
    if (UserToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserToken);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameConnectionRequest other) {
    if (other == null) {
      return;
    }
    if (other.GameId.Length != 0) {
      GameId = other.GameId;
    }
    if (other.UserToken.Length != 0) {
      UserToken = other.UserToken;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GameId = input.ReadString();
          break;
        }
        case 18: {
          UserToken = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GameConnectionResult : pb::IMessage<GameConnectionResult> {
  private static readonly pb::MessageParser<GameConnectionResult> _parser = new pb::MessageParser<GameConnectionResult>(() => new GameConnectionResult());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameConnectionResult> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchmakerReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameConnectionResult() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameConnectionResult(GameConnectionResult other) : this() {
    connectionSuccessful_ = other.connectionSuccessful_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameConnectionResult Clone() {
    return new GameConnectionResult(this);
  }

  /// <summary>Field number for the "connection_successful" field.</summary>
  public const int ConnectionSuccessfulFieldNumber = 1;
  private bool connectionSuccessful_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool ConnectionSuccessful {
    get { return connectionSuccessful_; }
    set {
      connectionSuccessful_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameConnectionResult);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameConnectionResult other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionSuccessful != other.ConnectionSuccessful) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ConnectionSuccessful != false) hash ^= ConnectionSuccessful.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ConnectionSuccessful != false) {
      output.WriteRawTag(8);
      output.WriteBool(ConnectionSuccessful);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ConnectionSuccessful != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameConnectionResult other) {
    if (other == null) {
      return;
    }
    if (other.ConnectionSuccessful != false) {
      ConnectionSuccessful = other.ConnectionSuccessful;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ConnectionSuccessful = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class GameDisconnectionRequest : pb::IMessage<GameDisconnectionRequest> {
  private static readonly pb::MessageParser<GameDisconnectionRequest> _parser = new pb::MessageParser<GameDisconnectionRequest>(() => new GameDisconnectionRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameDisconnectionRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchmakerReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameDisconnectionRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameDisconnectionRequest(GameDisconnectionRequest other) : this() {
    userToken_ = other.userToken_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameDisconnectionRequest Clone() {
    return new GameDisconnectionRequest(this);
  }

  /// <summary>Field number for the "user_token" field.</summary>
  public const int UserTokenFieldNumber = 1;
  private string userToken_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserToken {
    get { return userToken_; }
    set {
      userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameDisconnectionRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameDisconnectionRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserToken != other.UserToken) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserToken.Length != 0) hash ^= UserToken.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserToken.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserToken.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserToken);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameDisconnectionRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserToken.Length != 0) {
      UserToken = other.UserToken;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserToken = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GameDisconnectionResult : pb::IMessage<GameDisconnectionResult> {
  private static readonly pb::MessageParser<GameDisconnectionResult> _parser = new pb::MessageParser<GameDisconnectionResult>(() => new GameDisconnectionResult());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameDisconnectionResult> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchmakerReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameDisconnectionResult() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameDisconnectionResult(GameDisconnectionResult other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameDisconnectionResult Clone() {
    return new GameDisconnectionResult(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameDisconnectionResult);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameDisconnectionResult other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameDisconnectionResult other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

#endregion


#endregion Designer generated code
